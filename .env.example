# .env.example - 範例環境變數檔
# 複製成 .env 並依環境調整值

# --- Token & usage caps ----------------------------------------------------
# 每日 OpenAI token 上限（整數），超過後會嘗試將入口改為免費供應商或拒絕真實 OpenAI 型號
# 預設: 10000000
OPENAI_TPD_LIMIT=10000000

# 是否允許對「真實 OpenAI 型號」進行 reroute（true/false），false 時若仍為 OpenAI 型號會直接 429
# 預設: true
OPENAI_REROUTE_REAL=true

# --- Redis / 存量統計 ----------------------------------------------------
# Redis 連線 URL，用於記錄每日 token 使用量（tpd:openai:YYYY-MM-DD）
# 預設: redis://redis:6379/0
REDIS_URL=redis://redis:6379/0

# --- 時區 / Schema --------------------------------------------------------
# 用於計算 "今日" 的時區偏移（小時，整數）
# 預設為台北 UTC+8
TZ_OFFSET_HOURS=8

# Graph JSON Schema 的路徑（容器內路徑）
# 預設: /app/schemas/graph_schema.json
GRAPH_SCHEMA_PATH=/app/schemas/graph_schema.json

# --- Postgres / Dashboard UI -------------------------------------------------
# Postgres password for 'llmproxy' user (compose will inject to container)
# Required when bringing up docker compose.
POSTGRES_PASSWORD=change-me

# LiteLLM Dashboard basic auth credentials (change in production)
UI_USERNAME=admin
UI_PASSWORD=admin123

# --- litellm 測試工具 ----------------------------------------------------
# 測試用 litellm server 的 base URL（例如本機測試時）
# 預設: http://localhost:4000/v1
LITELLM_BASE=http://localhost:9400/v1

# 測試用 API key（litellm/容器管理 key）
# 預設: sk-admin
LITELLM_KEY=sk-admin

# LiteLLM 全域管理金鑰（README 中提到的 LITELLM_MASTER_KEY）
# 若你的部署使用 Master key 作為統一驗證，設定在這裡；否則可保留預設
LITELLM_MASTER_KEY=sk-admin

# 可選：其它基礎環境變數範例（視專案延伸）
# # EXAMPLE: 自訂日誌層級
# LOG_LEVEL=info

# --- 第三方供應商 API 金鑰（README 建議要提供） ----------------------------
# 這些為可選，但建議在有對應付費帳號或憑證時填入，以便使用官方 provider
# OpenAI（若使用 OpenAI 免費額度 / API）
OPENAI_API_KEY=
# Google / Gemini
GOOGLE_API_KEY=
# OpenRouter
OPENROUTER_API_KEY=
# Groq
GROQ_API_KEY=

# API Gateway 的允許金鑰清單（以逗號分隔）
# 範例: dev-key,another-key
API_GATEWAY_KEYS=dev-key

# 時區（可用於顯示或其他服務）
# 例如: Asia/Taipei
TZ=Asia/Taipei

# EOF
